name: Post deploy tests

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: false
        default: 'dev'
    secrets:
      azure_credentials:
        required: true
      kvname:
        required: false

jobs:
  post-deploy-tests:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          repository: data-altinn-no/k6-tests
      - name: 'Install K6'
        run: |
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6
      - name: 'Azure login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: 'Setup environment variables'
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |   
            declare -A keyVaults=(
              ["dev"]="kv-nadobe-test-dev"
              ["qa"]="kv_nadobe-test-qa"
              ["staging"]="kv-nadobe-prod-staging"
              ["prod"]="kv-nadobe-prod-prod"
            )
            env=${{ inputs.environment }}
            if [ -z "${keyVaults[$env]}" ]; then
              echo "Key '$env' is not a valid environment"
              exit 1
            fi
            kv=${keyVaults[$env]}
            az keyvault secret download --vault-name $kv -n "digdir-cert" -e base64 -f "cert.pfx"
            openssl pkcs12 -in cert.pfx -nokeys -clcerts -password pass: -out cert.pem
            openssl pkcs12 -in cert.pfx -nocerts -password pass: -out key.pem -nodes
            subscriptions=$(az keyvault secret show --name "${{ inputs.environment }}-subscriptions" --vault-name $kv --query "value")
            echo "::add-mask::$subscriptions"
            echo subscriptions=$subscriptions >> $GITHUB_ENV
            tokenUsername=$(az keyvault secret show --name "TokenUsername" --vault-name $kv --query "value")
            echo "::add-mask::$tokenUsername"
            echo tokenUsername=$tokenUsername >> $GITHUB_ENV
            tokenPassword=$(az keyvault secret show --name "TokenPassword" --vault-name $kv --query "value")
            echo "::add-mask::$tokenPassword"
            echo tokenPassword=$tokenPassword >> $GITHUB_ENV
            echo certificate=cert.pem >> $GITHUB_ENV
            echo key=key.pem >> $GITHUB_ENV
            echo useToken=true >> $GITHUB_ENV
            echo env=${{ inputs.environment }} >> $GITHUB_ENV
            echo GODEBUG=http2client=0 >> $GITHUB_ENV
      - name: "Run K6 tests (${{ inputs.environment }})"
        uses: grafana/k6-action@v0.2.0
        with:
          filename: postDeployTests.js
          flags: --quiet --log-output=stdout --include-system-env-vars
      - name: 'K6 results'
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          junit_files: 'junit.xml'
      - name: 'Remove Certificate files'
        run: rm cert.pem key.pem
